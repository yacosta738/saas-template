openapi: 3.0.3
info:
  title: Session Management API
  description: |
    RESTful API for managing active user sessions across multiple devices.
    Allows users to view, monitor, and terminate their sessions for enhanced security.
  version: 1.0.0
  contact:
    name: Platform Team
    email: platform@loomify.com

servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
  - url: https://api.loomify.com/v1
    description: Production server

security:
  - BearerAuth: []

tags:
  - name: Session Management
    description: Operations for viewing and managing user sessions

paths:
  /sessions:
    get:
      summary: List all active sessions for the authenticated user
      description: |
        Returns a list of all active sessions for the current user across all devices.
        Includes device metadata, location information, and activity timestamps.

        **Requirements**: FR-031, FR-032, FR-033
        **Performance Target**: <3 seconds response time (SC-016)
      tags:
        - Session Management
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          description: Filter sessions by status
          schema:
            type: string
            enum: [ACTIVE, EXPIRED, REVOKED]
            default: ACTIVE
          example: ACTIVE
        - name: sortBy
          in: query
          required: false
          description: Sort field
          schema:
            type: string
            enum: [createdAt, lastActivityAt]
            default: lastActivityAt
          example: lastActivityAt
        - name: sortOrder
          in: query
          required: false
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: desc
      responses:
        '200':
          description: List of user sessions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionListResponse'
              examples:
                multipleDevices:
                  summary: User with multiple active sessions
                  value:
                    sessions:
                      - id: 7c9e6679-7425-40de-944b-e07fc1f90ae7
                        deviceType: DESKTOP
                        browserName: Chrome
                        browserVersion: 118.0.5993.90
                        ipAddress: 203.0.113.42
                        location:
                          city: San Francisco
                          region: California
                          country: US
                        createdAt: '2025-10-20T14:15:00Z'
                        lastActivityAt: '2025-10-20T15:42:18Z'
                        expiresAt: '2025-10-20T16:15:00Z'
                        sessionType: STANDARD
                        status: ACTIVE
                        isCurrent: true
                      - id: 8d0f7780-8536-51ef-955c-f18gd2g01bf8
                        deviceType: MOBILE
                        browserName: Safari
                        browserVersion: 17.0
                        ipAddress: 198.51.100.89
                        location:
                          city: New York
                          region: New York
                          country: US
                        createdAt: '2025-10-19T09:30:00Z'
                        lastActivityAt: '2025-10-20T11:20:00Z'
                        expiresAt: '2025-11-18T09:30:00Z'
                        sessionType: REMEMBER_ME
                        status: ACTIVE
                        isCurrent: false
                    totalCount: 2
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /sessions/{sessionId}:
    get:
      summary: Get details for a specific session
      description: |
        Returns detailed information about a specific session.
        Users can only access their own sessions.

        **Requirements**: FR-031, FR-032
      tags:
        - Session Management
      security:
        - BearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Session ID
          schema:
            type: string
            format: uuid
          example: 7c9e6679-7425-40de-944b-e07fc1f90ae7
      responses:
        '200':
          description: Session details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDetail'
              examples:
                desktopSession:
                  summary: Desktop session details
                  value:
                    id: 7c9e6679-7425-40de-944b-e07fc1f90ae7
                    userId: 550e8400-e29b-41d4-a716-446655440000
                    deviceType: DESKTOP
                    browserName: Chrome
                    browserVersion: 118.0.5993.90
                    ipAddress: 203.0.113.42
                    location:
                      city: San Francisco
                      region: California
                      country: US
                    createdAt: '2025-10-20T14:15:00Z'
                    lastActivityAt: '2025-10-20T15:42:18Z'
                    expiresAt: '2025-10-20T16:15:00Z'
                    sessionType: STANDARD
                    status: ACTIVE
                    isCurrent: true
                    recentActivity:
                      - eventType: LOGIN_SUCCESS
                        occurredAt: '2025-10-20T14:15:00Z'
                      - eventType: TOKEN_REFRESH_SUCCESS
                        occurredAt: '2025-10-20T15:15:00Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: User does not have permission to access this session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                forbidden:
                  summary: Access denied
                  value:
                    error:
                      code: FORBIDDEN
                      message: You do not have permission to access this session
                      timestamp: '2025-10-20T14:30:00Z'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Session not found
                  value:
                    error:
                      code: SESSION_NOT_FOUND
                      message: The requested session does not exist
                      timestamp: '2025-10-20T14:30:00Z'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Terminate a specific session
      description: |
        Revokes a specific session by invalidating its access and refresh tokens.
        The terminated session cannot be reactivated.

        **Requirements**: FR-034, FR-035
        **Performance Target**: <5 seconds (SC-017)
      tags:
        - Session Management
      security:
        - BearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Session ID to terminate
          schema:
            type: string
            format: uuid
          example: 8d0f7780-8536-51ef-955c-f18gd2g01bf8
      responses:
        '204':
          description: Session terminated successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Cannot terminate the current session via this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                currentSession:
                  summary: Cannot terminate current session
                  value:
                    error:
                      code: CANNOT_TERMINATE_CURRENT_SESSION
                      message: Use the /auth/logout endpoint to terminate your current session
                      timestamp: '2025-10-20T14:30:00Z'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Session not found
                  value:
                    error:
                      code: SESSION_NOT_FOUND
                      message: The requested session does not exist
                      timestamp: '2025-10-20T14:30:00Z'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /sessions/terminate-all:
    post:
      summary: Terminate all sessions except the current one
      description: |
        Revokes all active sessions for the authenticated user except the current session.
        This is a global logout across all devices except the one making the request.

        **Requirements**: FR-036, FR-037, FR-038
      tags:
        - Session Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: All other sessions terminated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateAllResponse'
              examples:
                success:
                  summary: Terminated multiple sessions
                  value:
                    terminatedCount: 3
                    message: Successfully terminated 3 other session(s)
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token in Authorization header

  schemas:
    SessionListResponse:
      type: object
      required:
        - sessions
        - totalCount
      properties:
        sessions:
          type: array
          description: List of user sessions
          items:
            $ref: '#/components/schemas/SessionSummary'
        totalCount:
          type: integer
          description: Total number of sessions matching the filter
          example: 2

    SessionSummary:
      type: object
      required:
        - id
        - deviceType
        - browserName
        - ipAddress
        - createdAt
        - lastActivityAt
        - expiresAt
        - sessionType
        - status
        - isCurrent
      properties:
        id:
          type: string
          format: uuid
          description: Session ID
          example: 7c9e6679-7425-40de-944b-e07fc1f90ae7
        deviceType:
          type: string
          enum: [DESKTOP, MOBILE, TABLET, UNKNOWN]
          description: Device type
          example: DESKTOP
        browserName:
          type: string
          description: Browser name
          example: Chrome
        browserVersion:
          type: string
          description: Browser version
          example: 118.0.5993.90
        ipAddress:
          type: string
          description: IP address of the session
          example: 203.0.113.42
        location:
          type: object
          nullable: true
          description: Approximate location from IP geolocation
          properties:
            city:
              type: string
              example: San Francisco
            region:
              type: string
              example: California
            country:
              type: string
              description: ISO 3166-1 alpha-2 country code
              example: US
        createdAt:
          type: string
          format: date-time
          description: Session creation timestamp (ISO 8601)
          example: '2025-10-20T14:15:00Z'
        lastActivityAt:
          type: string
          format: date-time
          description: Last activity timestamp (ISO 8601)
          example: '2025-10-20T15:42:18Z'
        expiresAt:
          type: string
          format: date-time
          description: Session expiration timestamp (ISO 8601)
          example: '2025-10-20T16:15:00Z'
        sessionType:
          type: string
          enum: [STANDARD, REMEMBER_ME]
          description: Session type
          example: STANDARD
        status:
          type: string
          enum: [ACTIVE, EXPIRED, REVOKED]
          description: Session status
          example: ACTIVE
        isCurrent:
          type: boolean
          description: Whether this is the current session
          example: true

    SessionDetail:
      allOf:
        - $ref: '#/components/schemas/SessionSummary'
        - type: object
          required:
            - userId
            - recentActivity
          properties:
            userId:
              type: string
              format: uuid
              description: User ID owning this session
              example: 550e8400-e29b-41d4-a716-446655440000
            recentActivity:
              type: array
              description: Recent authentication events for this session (last 10)
              items:
                type: object
                required:
                  - eventType
                  - occurredAt
                properties:
                  eventType:
                    type: string
                    enum:
                      - LOGIN_SUCCESS
                      - FEDERATED_LOGIN_SUCCESS
                      - TOKEN_REFRESH_SUCCESS
                      - LOGOUT
                      - SESSION_TERMINATED
                    description: Event type
                    example: TOKEN_REFRESH_SUCCESS
                  occurredAt:
                    type: string
                    format: date-time
                    description: Event timestamp (ISO 8601)
                    example: '2025-10-20T15:15:00Z'

    TerminateAllResponse:
      type: object
      required:
        - terminatedCount
        - message
      properties:
        terminatedCount:
          type: integer
          description: Number of sessions terminated
          example: 3
        message:
          type: string
          description: Human-readable success message
          example: Successfully terminated 3 other session(s)

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
            - timestamp
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: SESSION_NOT_FOUND
            message:
              type: string
              description: Human-readable error message
              example: The requested session does not exist
            timestamp:
              type: string
              format: date-time
              description: Error occurrence timestamp (ISO 8601)
              example: '2025-10-20T14:30:00Z'

  responses:
    Unauthorized:
      description: Missing or invalid authentication credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missingToken:
              summary: Missing token
              value:
                error:
                  code: MISSING_TOKEN
                  message: Authentication token is required
                  timestamp: '2025-10-20T14:30:00Z'
            invalidToken:
              summary: Invalid token
              value:
                error:
                  code: INVALID_TOKEN
                  message: Authentication token is invalid or expired
                  timestamp: '2025-10-20T14:30:00Z'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            serverError:
              summary: Internal error
              value:
                error:
                  code: INTERNAL_ERROR
                  message: An unexpected error occurred. Please try again later.
                  timestamp: '2025-10-20T14:30:00Z'
