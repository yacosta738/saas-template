#!/usr/bin/env bash

set -e

# Ensure docs directory exists
mkdir -p docs

# Output file
doc_file="docs/src/content/docs/structure.md"

date_only="$(date -u '+%Y-%m-%d')"

cat > "$doc_file" <<EOF
---
title: Project Structure
description: Overview of the project structure and organization.
---

# Project Structure - Overview

<!-- markdownlint-disable-next-line MD036 -->
**Auto-generated by scripts/generate-structure-docs.sh on ${date_only}**

> **Note:** This structure is automatically generated. Do not edit this file manually.

## Root Directory Overview

\`\`\`plaintext
EOF

# Check if tree-extended is available in node_modules
if ! npx --no-install tree-extended --version &> /dev/null; then
  echo "tree-extended not found in node_modules, installing with pnpm..."
  if ! pnpm add -Dw tree-extended; then
    echo >&2 "Error: Failed to install tree-extended. Please check your network connection or install it manually with 'pnpm add -Dw tree-extended'."
    exit 1
  fi
fi

# Run tree-extended from node_modules with more focused output
if ! npx tree-extended \
  -max=8 \
  -max-show-not-empty \
  -gitignore \
  -ignore "node_modules,build,dist,.vite*,.bin,tmp,.artifact,*.jar,*.class,*.DS_Store*,.gitignore,.env*,*.compiler.options,coverage,.git,public,.idea,.vscode,*.log,*.tmp,*.cache,target,out,generated,bin,lib,logs,temp,assets/generated,__pycache__,*.pyc,*.pyo,*.pyd,*.so,*.dylib,*.dll,*.exe,*.o,*.a,*.obj,*.zip,*.tar,*.gz,*.rar,*.7z,.github,workflows,config,gradle" \
  --no-color \
  >> "$doc_file"; then
  echo >&2 "Error: Failed to run tree-extended. Please check the installation."
  exit 1
fi

echo '```' >> "$doc_file"
echo "Project structure documentation generated at $doc_file"
