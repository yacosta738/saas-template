name: Backend CI
on:
  workflow_call:
    secrets:
      NVD_API_KEY:
        required: false
      CODECOV_TOKEN:
        required: false
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'shared/**'
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'gradle/**'
      - '.github/workflows/backend-ci.yml'
      - '.github/actions/setup/java/**'
  pull_request:
    paths:
      - 'server/**'
      - 'shared/**'
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'gradle/**'
      - '.github/workflows/backend-ci.yml'
      - '.github/actions/setup/java/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint with Detekt # Renamed
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: read # Or 'write' if reviewdog needs to create PR review comments directly
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v4

      - name: Setup Java
        uses: ./.github/actions/setup/java

      - name: Install reviewdog
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin v0.17.0 # Using a specific version

      - name: Run Detekt and Reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running Detekt..."
          # Run detektAll. The task generates reports in build/reports/detekt/
          # We use || true so that the workflow continues to the reviewdog step even if detekt finds issues.
          ./gradlew detektAll --no-daemon --stacktrace || true

          echo "Running Reviewdog on Detekt results..."
          reviewdog -reporter=github-pr-check -name="Detekt" -f=sarif -level="warning" --filter-mode="nofilter" < build/reports/detekt/detekt.sarif

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v4

      - name: Setup Java
        uses: ./.github/actions/setup/java

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@34d7c956a59aed1bfebf31df77b8de55db9bbaaf # v2.21.0
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v4
        if: secrets.CODECOV_TOKEN != ''
        with:
          files: ./server/engine/build/reports/kover/report.xml # Updated path for Kover
          # flags: backend # Optional: add flags to distinguish reports
          # name: codecov-backend # Optional: name for the report
          # fail_ci_if_error: true # Optional: fail CI if Codecov upload fails
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: backend-artifacts
          path: |
            server/engine/build/libs/*.jar
            server/engine/build/reports/
          retention-days: 7
