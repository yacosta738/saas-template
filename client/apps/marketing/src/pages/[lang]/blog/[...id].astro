---
export const prerender = true;

import { render } from "astro:content";
import CtaNewsletterSubscription from "@/components/CtaNewsletterSubscription.astro";
import OptimizedPicture from "@/components/OptimizedPicture.astro";
import PostFooter from "@/components/PostFooter.astro";
import PostHeader from "@/components/PostHeader.astro";
import { type Lang, useTranslations } from "@/i18n";
import Layout from "@/layouts/Article.astro";
import { getArticles } from "@/models/article";
import type Article from "@/models/article/article.model";

const currentLocale = Astro.currentLocale as Lang;
const t = useTranslations(currentLocale);

interface Props {
	post: Article;
}

export async function getStaticPaths() {
	const posts = await getArticles();

	return posts.map((post) => {
		const [lang, ...id] = post.id.split("/");
		return { params: { lang, id: id.join("/") || undefined }, props: { post } };
	});
}

const { post } = Astro.props;

if (!post.entry) {
	throw new Error(`No entry found for post: ${post.id}`);
}

const { Content, remarkPluginFrontmatter } = await render(post.entry);
---

<Layout
	{...post}
	url={Astro.request.url}
	minutesRead={remarkPluginFrontmatter.minutesRead}
>
	<div class="container mx-auto px-4">
		<PostHeader post={post} readingTime={remarkPluginFrontmatter.minutesRead} />
		<div class="mx-auto prose lg:prose-xl dark:prose-invert">
			{
				post.cover && (
					<OptimizedPicture src={post.cover} alt={post.title} loading="eager" />
				)
			}
			<Content />
			<PostFooter post={post} />
		</div>

		<!-- Comment Area -->

	</div>
	<div class="border-y border-y-secondary-foreground-light dark:border-y-secondary-foreground-dark mt-12">
		<CtaNewsletterSubscription
		formId="article-cta-newsletter-subscription-form"
		title={t("cta.title")}
		description={t("cta.description")}
		class="my-10 py-5 mx-auto container px-4"
	/>
	</div>

</Layout>
