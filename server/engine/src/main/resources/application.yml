logging:
  pattern:
    console: "%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
spring:
  application:
    name: ${application.name}
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by gradle when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: '@spring.profiles.active@'
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  liquibase:
    change-log: classpath:db/changelog/master.yaml
    enabled: true
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          oidc:
            client-secret: ${application.security.oauth2.client-secret}
            client-id: ${application.security.oauth2.client-id}
            scope: openid, profile, email, offline_access # last one for refresh tokens
        provider:
          oidc:
            issuer-uri: ${application.security.oauth2.issuer-uri}
        resourceserver:
          jwt:
            audiences: ${application.security.oauth2.audience}
            jwk-set-uri: ${application.security.oauth2.issuer-uri}/protocol/openid-connect/certs
  r2dbc:
    url: ${DATABASE_URL:r2dbc:postgresql://localhost:5432/postgres}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    pool:
      enabled: true
      initial-size: 10
      max-size: 20
  jpa:
    show-sql: true
    hibernate.ddl-auto: none
  cache:
    caffeine:
      caches:
        linkPreviews:
          spec: maximumSize=500,expireAfterWrite=5m
  mail:
    host: ${SMTP_HOST:localhost}
    port: ${SMTP_PORT:3025}
    username: ${SMTP_USERNAME:developer}
    password: ${SMTP_PASSWORD:secret}
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
          ssl:
            enable: false
application:
  name: Loomify
  description: Example Loomify application used as a starting point for projects.
  version: 0.0.1-SNAPSHOT
  security:
    oauth2:
      base-url: ${OAUTH2_SERVER_URL:http://localhost:9080}
      server-url: ${application.security.oauth2.base-url}
      issuer-uri: ${application.security.oauth2.base-url}/realms/${application.security.oauth2.realm}
      realm: ${REALM:Loomify}
      client-id: ${CLIENT_ID:web_app}
      client-secret: ${CLIENT_SECRET:web_app}
      admin-client-id: ${ADMIN_CLIENT_ID:admin-cli}
      admin-realm: ${ADMIN_REALM:master}
      admin-username: ${ADMIN_REALM_USERNAME:admin}
      admin-password: ${ADMIN_REALM_PASSWORD:secret}
      audience:
        - account
        - api://default
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS}
      allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers, X-Requested-With, X-Xsrf-Token, X-New-Header}
      exposed-headers: ${CORS_EXPOSED_HEADERS:Access-Control-Allow-Origin,Access-Control-Allow-Credentials}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
      max-age: ${CORS_MAX_AGE:3600}
    domain: ${HOSTNAME:localhost}

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - prometheus
        # Restrict sensitive endpoints in production
        exclude:
          - configprops
          - env
          - logfile
          - loggers
          - threaddump
  info:
    git:
      mode: full
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}
notification:
  email:
    sendgrid-api-key: ${SENDGRID_API_KEY:WILL_BE_REPLACED}
springdoc:
  show-actuator: true
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /api-docs
    csrf:
      enabled: true
    oauth:
      app-name: ${application.name}
      client-id: ${application.security.oauth2.client-id}
      client-secret: ${application.security.oauth2.client-secret}
# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'
